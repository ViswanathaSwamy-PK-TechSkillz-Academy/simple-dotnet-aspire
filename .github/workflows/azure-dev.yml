name: .NET 8 Aspire to Azure Deployment

on:
  workflow_dispatch:
  push:
    # Run when commits are pushed to the main branch
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
  AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
  AZD_ALPHA_ENABLE_RESOURCEGROUPDEPLOYMENTS: "true"
  AZURE_SQL_DB_CONN_STR: ${{ secrets.SqlDbConnStr }}
  AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}

defaults:
  run:
    working-directory: ./Aspire.StarterApp/Aspire.StarterApp.AppHost

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Azure Developer CLI (azd)
        uses: Azure/setup-azd@v1.0.0

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login --client-id ${{ env.AZURE_CLIENT_ID }} --federated-credential-provider "github" --tenant-id ${{ env.AZURE_TENANT_ID }}
        shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login --client-id $($info.clientId) --client-secret $($info.clientSecret) --tenant-id $($info.tenantId)
        shell: pwsh

      - name: Set environment variables
        run: echo "AZURE_LOCATION=eastus" >> $GITHUB_ENV

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Azure Developer CLI (azd)
        uses: Azure/setup-azd@v1.0.0

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      - name: Configure AZD for Resource Group Deployments
        run: azd config set alpha.resourceGroupDeployments on

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login --client-id ${{ env.AZURE_CLIENT_ID }} --federated-credential-provider "github" --tenant-id ${{ env.AZURE_TENANT_ID }}
        shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login --client-id $($info.clientId) --client-secret $($info.clientSecret) --tenant-id $($info.tenantId)
        shell: pwsh

      - name: Provision Infrastructure
        run: azd provision --environment ${{ env.AZURE_ENV_NAME }} --no-prompt
        env:
          AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ env.AZD_INITIAL_ENVIRONMENT_CONFIG }}

  deploy-application:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Azure Developer CLI (azd)
        uses: Azure/setup-azd@v1.0.0

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      - name: Configure AZD for Resource Group Deployments
        run: azd config set alpha.resourceGroupDeployments on

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login --client-id ${{ env.AZURE_CLIENT_ID }} --federated-credential-provider "github" --tenant-id ${{ env.AZURE_TENANT_ID }}
        shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login --client-id $($info.clientId) --client-secret $($info.clientSecret) --tenant-id $($info.tenantId)
        shell: pwsh

      - name: Print Environment Variables
        run: env

      - name: Set environment variables
        run: echo "AZURE_LOCATION=eastus" >> $GITHUB_ENV

      - name: Refresh azd env (pulls latest infrastructure provision)
        run: azd env refresh --no-prompt
        env:
          AZURE_LOCATION: ${{ env.AZURE_LOCATION }}

      - name: Deploy Application
        run: azd deploy --environment ${{ env.AZURE_ENV_NAME }} --no-prompt # --debug
        env:
          AZURE_LOCATION: ${{ env.AZURE_LOCATION }}
          AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ env.AZD_INITIAL_ENVIRONMENT_CONFIG }}
